---
// Import global styles
import "../style/global.css";

export interface Props {
	title?: string;
	description?: string;
}

const {
	title = "Free SEO Checklist 2025 - Complete AI SEO Guide & Tools | SarvaSEO",
	description = "Free comprehensive SEO checklist with 55+ actionable steps. Master SEO rankings with AI tools, keyword research, technical SEO, and proven strategies. Get instant search engine indexing with IndexNow integration!",
} = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<!-- Favicon Configuration - Multiple formats for maximum compatibility -->
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="apple-touch-icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />

		<!-- SEO Meta Tags -->
		<title>{title}</title>
		<meta name="description" content={description} />
		<meta
			name="keywords"
			content="free SEO checklist, AI SEO, how to improve SEO, SEO guide 2025, search engine optimization, keyword research, technical SEO, SEO tools, SEO ranking factors, website optimization, SEO audit, local SEO, content SEO, link building, page speed optimization, mobile SEO, SEO best practices, organic traffic, SERP ranking, Google SEO, SEO strategy"
		/>
		<meta name="author" content="SarvaSEO - Built by atrey.dev" />
		<meta
			name="robots"
			content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1"
		/>
		<meta name="googlebot" content="index, follow" />
		<meta
			name="google-site-verification"
			content="vfl_Z9jHpXJBVtYEGNKNsxdFq_9HMWyKZNYF8ZuH4WE"
		/>
		<meta name="msvalidate.01" content="09DA5E83D4AFE5E809803FF539F307C2" />
		<meta name="IndexNow" content="0177dad855f84bc3900bf90ee223115c" />
		<link rel="canonical" href="https://sarvaseo.atrey.dev/" />

		<!-- Additional SEO Meta Tags for Better Indexing -->
		<meta name="rating" content="general" />
		<meta name="revisit-after" content="7 days" />
		<meta name="distribution" content="global" />
		<meta name="language" content="en" />
		<meta name="geo.region" content="US" />
		<meta name="geo.placename" content="United States" />

		<!-- Open Graph Meta Tags -->
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:type" content="website" />
		<meta property="og:url" content="https://sarvaseo.atrey.dev/" />
		<meta property="og:site_name" content="SarvaSEO" />
		<meta property="og:locale" content="en_US" />
		<meta property="og:image" content="https://sarvaseo.atrey.dev/sarvaseo-og.png" />
		<meta property="og:image:width" content="1200" />
		<meta property="og:image:height" content="630" />
		<meta property="og:image:type" content="image/png" />
		<meta property="og:image:alt" content="SarvaSEO - Free SEO Checklist 2025 with AI Tools and Proven Strategies" />

		<!-- Twitter Card Meta Tags -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		<meta name="twitter:image" content="https://sarvaseo.atrey.dev/sarvaseo-og.png" />
		<meta name="twitter:image:alt" content="SarvaSEO - Free SEO Checklist 2025 with AI Tools and Proven Strategies" />

		<!-- SEO-Critical Meta Tags -->
		<meta name="theme-color" content="#EAB308" />
		<meta name="application-name" content="SarvaSEO" />
		<meta name="apple-mobile-web-app-title" content="SarvaSEO" />

		<!-- SEO-Critical Schema.org JSON-LD -->
		<script type="application/ld+json" is:inline>
			{
				"@context": "https://schema.org",
				"@type": "WebSite",
				"name": "SarvaSEO",
				"description": "Free comprehensive SEO checklist and guide with AI-powered tools for improving search engine rankings",
				"url": "https://sarvaseo.atrey.dev/",
				"author": {
					"@type": "Person",
					"name": "Atrey",
					"url": "https://atrey.dev"
				},
				"publisher": {
					"@type": "Organization",
					"name": "SarvaSEO",
					"url": "https://sarvaseo.atrey.dev/"
				},
				"mainEntity": {
					"@type": "HowTo",
					"name": "Complete SEO Checklist Guide",
					"description": "Step-by-step guide to improve your website's SEO rankings with proven strategies and AI tools",
					"totalTime": "PT2H",
					"step": [
						{
							"@type": "HowToStep",
							"name": "Foundation Setup",
							"text": "Set up Google Business Profile, Search Console, and basic technical SEO foundations"
						},
						{
							"@type": "HowToStep",
							"name": "Content Strategy",
							"text": "Perform keyword research, create SEO-optimized content, and build topical authority"
						},
						{
							"@type": "HowToStep",
							"name": "Technical Optimization",
							"text": "Optimize page speed, mobile responsiveness, and Core Web Vitals"
						}
					]
				}
			}
		</script>

		<!-- Google tag (gtag.js) -->
		<script async src="https://www.googletagmanager.com/gtag/js?id=G-86FV37CDCN"></script>
		<script is:inline>
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());
			
			gtag('config', 'G-86FV37CDCN');
		</script>

		<!-- Microsoft Clarity Analytics -->
		<script is:inline>
			(function (c, l, a, r, i, t, y) {
				c[a] =
					c[a] ||
					function () {
						(c[a].q = c[a].q || []).push(arguments);
					};
				t = l.createElement(r);
				t.async = 1;
				t.src = "https://www.clarity.ms/tag/" + i + "?ref=bwt";
				y = l.getElementsByTagName(r)[0];
				y.parentNode.insertBefore(t, y);
			})(window, document, "clarity", "script", "t3llz3cw5l");
		</script>

		<!-- Two-Level Interactive System: Modules + Steps -->
		<script is:inline>
			// Performance-optimized module system
			window.loadedModules = new Set();

			// MODULE LEVEL: Accordion behavior (one module open at a time)
			window.toggleModule = function (moduleId) {
				const toggle = document.querySelector(
					`[data-module-toggle="${moduleId}"]`,
				);
				const content = document.querySelector(
					`[data-module-content="${moduleId}"]`,
				);
				const chevron = document.querySelector(
					`[data-chevron="${moduleId}"]`,
				);
				const expanded =
					toggle?.getAttribute("aria-expanded") === "true";

				if (!content || !chevron || !toggle) return;

				// Close all other modules first (accordion behavior)
				document
					.querySelectorAll("[data-module-toggle]")
					.forEach((otherToggle) => {
						const otherId =
							otherToggle.getAttribute("data-module-toggle");
						if (otherId !== moduleId) {
							const otherContent = document.querySelector(
								`[data-module-content="${otherId}"]`,
							);
							const otherChevron = document.querySelector(
								`[data-chevron="${otherId}"]`,
							);
							if (otherContent && otherChevron) {
								otherContent.classList.add("hidden");
								otherChevron.style.transform = "";
								otherToggle.setAttribute(
									"aria-expanded",
									"false",
								);
							}
						}
					});

				// Toggle current module
				if (expanded) {
					content.classList.add("hidden");
					chevron.style.transform = "";
					toggle.setAttribute("aria-expanded", "false");
				} else {
					// Load content if not already loaded
					if (!window.loadedModules.has(moduleId)) {
						loadModuleContent(moduleId);
					}
					content.classList.remove("hidden");
					chevron.style.transform = "rotate(180deg)";
					toggle.setAttribute("aria-expanded", "true");
				}
			};

			// STEP LEVEL: Independent toggles within modules
			window.toggleStep = function (stepId) {
				const toggle = document.querySelector(
					`[data-step-toggle="${stepId}"]`,
				);
				const content = document.querySelector(
					`[data-step-content="${stepId}"]`,
				);
				const chevron = document.querySelector(
					`[data-step-chevron="${stepId}"]`,
				);
				const expanded =
					toggle?.getAttribute("aria-expanded") === "true";

				if (!content || !chevron || !toggle) return;

				// Check if step is premium (locked)
				if (toggle.classList.contains("cursor-not-allowed")) {
					// Show premium message or do nothing for locked steps
					return;
				}

				// Toggle step independently
				if (expanded) {
					content.classList.add("hidden");
					chevron.style.transform = "";
					toggle.setAttribute("aria-expanded", "false");
				} else {
					content.classList.remove("hidden");
					chevron.style.transform = "rotate(180deg)";
					toggle.setAttribute("aria-expanded", "true");
				}
			};

			// Load module content
			window.loadModuleContent = function (moduleId) {
				if (window.loadedModules.has(moduleId)) return;

				const stepsContainer = document.querySelector(
					`[data-steps-container="${moduleId}"]`,
				);
				if (!stepsContainer) return;

				// Content is already rendered by Astro, just mark as loaded
				window.loadedModules.add(moduleId);
			};

			// Event delegation with proper isolation
			document.addEventListener("click", function (e) {
				// Handle step toggles first (more specific) - only for non-premium steps
				const stepToggle = e.target.closest("[data-step-toggle]");
				if (stepToggle) {
					e.preventDefault();
					e.stopPropagation();
					const stepId = stepToggle.getAttribute("data-step-toggle");
					if (stepId) {
						// Only toggle if stepId exists (premium steps have null)
						toggleStep(stepId);
					}
					return;
				}

				// Handle module toggles (only if not inside step content)
				const moduleToggle = e.target.closest("[data-module-toggle]");
				if (moduleToggle && !e.target.closest("[data-step-content]")) {
					e.preventDefault();
					e.stopPropagation();
					const moduleId =
						moduleToggle.getAttribute("data-module-toggle");
					toggleModule(moduleId);
					return;
				}
			});

			// Keyboard support for both levels
			document.addEventListener("keydown", function (e) {
				if (e.key === "Enter" || e.key === " ") {
					// Handle step keyboard navigation - only for non-premium steps
					const stepToggle = e.target.closest("[data-step-toggle]");
					if (stepToggle) {
						e.preventDefault();
						const stepId =
							stepToggle.getAttribute("data-step-toggle");
						if (stepId) {
							// Only toggle if stepId exists (premium steps have null)
							toggleStep(stepId);
						}
						return;
					}

					// Handle module keyboard navigation
					const moduleToggle = e.target.closest(
						"[data-module-toggle]",
					);
					if (moduleToggle) {
						e.preventDefault();
						const moduleId =
							moduleToggle.getAttribute("data-module-toggle");
						toggleModule(moduleId);
						return;
					}
				}
			});
		</script>

		<!-- Critical Resource Hints - Optimized -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link rel="preconnect" href="https://www.googletagmanager.com" />
		<link rel="preconnect" href="https://www.google-analytics.com" />
		<link rel="preconnect" href="https://www.clarity.ms" />
		<link rel="dns-prefetch" href="https://api.indexnow.org" />
		<link rel="dns-prefetch" href="https://www.bing.com" />
		<link rel="dns-prefetch" href="https://yandex.com" />

		<!-- Non-blocking Font Loading with Error Handling -->
		<link
			href="https://fonts.googleapis.com/css2?family=Geist:wght@100..900&family=Instrument+Serif:ital@0;1&display=swap"
			rel="preload"
			as="style"
			onload="this.onload=null;this.rel='stylesheet'"
			onerror="console.warn('Font loading failed, using fallbacks')"
		/>
		<noscript>
			<link
				href="https://fonts.googleapis.com/css2?family=Geist:wght@100..900&family=Instrument+Serif:ital@0;1&display=swap"
				rel="stylesheet"
			/>
		</noscript>

		<!-- Critical CSS - Inlined for Performance -->
		<style>
			/* Font fallbacks to prevent layout shift */
			.font-geist {
				font-family:
					"Geist",
					-apple-system,
					BlinkMacSystemFont,
					"Segoe UI",
					Roboto,
					sans-serif;
			}
			.font-instrument {
				font-family: "Instrument Serif", Georgia, "Times New Roman",
					serif;
			}

			/* Critical above-the-fold styles */
			body {
				margin: 0;
				padding: 0;
			}
			.hero-section {
				min-height: 100vh;
			}
			.main-content {
				max-width: 768px;
				margin: 0 auto;
				padding: 0 4rem;
			}

			/* Optimize LCP element */
			h1 {
				font-size: 3.75rem;
				line-height: 1;
				font-weight: 300;
				color: #111827;
			}
			@media (min-width: 640px) {
				h1 {
					font-size: 4.5rem;
				}
			}

			/* Reduce layout shift */
			.module-container {
				contain: layout style;
			}
			.step-container {
				contain: layout;
			}
		</style>

		<!-- Ultra-Minimal Performance Script -->
		<script is:inline>
			// Essential LCP tracking only
			addEventListener("load", () => {
				if ("PerformanceObserver" in window) {
					try {
						new PerformanceObserver((list) => {
							const entries = list.getEntries();
							if (entries.length && typeof gtag !== "undefined") {
								gtag("event", "LCP", {
									value: Math.round(
										entries[entries.length - 1].startTime,
									),
									event_category: "Performance",
								});
							}
						}).observe({
							type: "largest-contentful-paint",
							buffered: true,
						});
					} catch (e) {}
				}

				// Auto-submit to IndexNow for instant indexing
				setTimeout(() => {
					fetch("/api/indexnow", {
						method: "POST",
						headers: { "Content-Type": "application/json" },
						body: JSON.stringify({ url: window.location.href }),
					}).catch((error) => {
						console.warn(
							"IndexNow submission failed:",
							error.message,
						);
					});
				}, 3000);

				// Error handling for better debugging
				window.addEventListener("error", function (e) {
					if (
						e.filename &&
						e.filename.includes("fonts.gstatic.com")
					) {
						console.warn(
							"Font loading error handled gracefully:",
							e.message,
						);
						e.preventDefault();
					}
				});
			});
		</script>

		<!-- Valid Security Meta Tags -->
		<meta
			http-equiv="Content-Security-Policy"
			content="default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com https://www.clarity.ms https://scripts.clarity.ms; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; connect-src 'self' https://www.google-analytics.com https://analytics.google.com https://www.clarity.ms https://c.clarity.ms; img-src 'self' data: https://www.google-analytics.com https://c.clarity.ms;"
		/>
		<meta http-equiv="X-Content-Type-Options" content="nosniff" />
		<meta
			http-equiv="Referrer-Policy"
			content="strict-origin-when-cross-origin"
		/>
		<!-- Disable overscroll behavior -->
		<style is:inline>
			html,
			body {
				overscroll-behavior: none;
			}
		</style>
	</head>
	<body class="font-geist text-gray-900 antialiased">
		<div class="min-h-screen bg-gradient-to-br from-white to-yellow-50">
			<slot />
		</div>
	</body>
</html>
